<div class="flex map-key">
  <button class="flex-1 day-toggle-button active"><div class="button-content"><span class="desktop">All</span><strong class="mobile">All</strong></div></button>
  <button value="monday" class="flex-1 day-toggle-button purple"><div class="button-content"><span class="desktop">Monday</span><strong class="mobile">M</strong></div></button>
  <button value="tuesday" class="flex-1 day-toggle-button red"><div class="button-content"><span class="desktop">Tuesday</span><strong class="mobile">Tu</strong></div></button>
  <button value="wednesday" class="flex-1 day-toggle-button yellow"><div class="button-content"><span class="desktop">Wednesday</span><strong class="mobile">W</strong></div></button>
  <button value="thursday" class="flex-1 day-toggle-button orange"><div class="button-content"><span class="desktop">Thursday</span><strong class="mobile">TH</strong></div></button>
  <button value="friday" class="flex-1 day-toggle-button green"><div class="button-content"><span class="desktop">Friday</span><strong class="mobile">F</strong></div></button>
</div>
<div id="map"></div>
<script>
  var customers = <%= customers.to_json.html_safe %>;
  console.log(customers);
  var map, infoWindow;
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -34.397, lng: 150.644},
      zoom: 11,
      zoomControl: true,
      mapTypeControl: false,
      scaleControl: true,
      streetViewControl: true,
      rotateControl: true,
      fullscreenControl: false,
      styles:[
        {
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#f5f5f5"
            }
          ]
        },
        {
          "elementType": "labels.icon",
          "stylers": [
            {
              "visibility": "off"
            }
          ]
        },
        {
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#616161"
            }
          ]
        },
        {
          "elementType": "labels.text.stroke",
          "stylers": [
            {
              "color": "#f5f5f5"
            }
          ]
        },
        {
          "featureType": "administrative.land_parcel",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#bdbdbd"
            }
          ]
        },
        {
          "featureType": "poi",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#eeeeee"
            }
          ]
        },
        {
          "featureType": "poi",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#757575"
            }
          ]
        },
        {
          "featureType": "poi.park",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#e5e5e5"
            }
          ]
        },
        {
          "featureType": "poi.park",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#9e9e9e"
            }
          ]
        },
        {
          "featureType": "road",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#ffffff"
            }
          ]
        },
        {
          "featureType": "road.arterial",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#757575"
            }
          ]
        },
        {
          "featureType": "road.highway",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#dadada"
            }
          ]
        },
        {
          "featureType": "road.highway",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#616161"
            }
          ]
        },
        {
          "featureType": "road.local",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#9e9e9e"
            }
          ]
        },
        {
          "featureType": "transit.line",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#e5e5e5"
            }
          ]
        },
        {
          "featureType": "transit.station",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#eeeeee"
            }
          ]
        },
        {
          "featureType": "water",
          "elementType": "geometry",
          "stylers": [
            {
              "color": "#8aa7cc"
            }
          ]
        },
        {
          "featureType": "water",
          "elementType": "labels.text.fill",
          "stylers": [
            {
              "color": "#9e9e9e"
            }
          ]
        }
      ]
    });
    // infoWindow = new google.maps.InfoWindow;
    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var location = {lat: pos.lat, lng: pos.lng};
        var marker = new google.maps.Marker({
          position: location,
          map: map,
          // animation: google.maps.Animation.DROP,
          icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
        });
        map.setCenter(pos);
      }, function() {
        handleLocationError(true, infoWindow, map.getCenter());

      });
      //Makers For Pools
      setMarkers(customers);
    } else {
      // Browser doesn't support Geolocation
      handleLocationError(false, infoWindow, map.getCenter());
    }
  }
  $(".day-toggle-button").on("click", function(){
    var button = $(this);
    $(".map-key").find(".day-toggle-button").removeClass('active');
    button.addClass('active');
    var val = button.val();
    reloadMarkers(val);
  })
  var markers = []
  function filterPools(param){
    
    var newArray = customers.filter(function(customer){
      return customer[param]
    });
    return newArray
  }
  function reloadMarkers(param) {

    filteredResults = customers;

    if(param){
      filteredResults = filterPools(param);
    }
     
      // Loop through markers and set map to null for each
      for (var i=0; i<markers.length; i++) {
          markers[i].setMap(null);
      }
      // Reset the markers array
      markers = [];
      // Call set markers to re-add markers
      setMarkers(filteredResults);
  }
  function setMarkers(customers) {
    //Makers For Pools
      var image = {
        url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
        size: new google.maps.Size(40, 32),
        origin: new google.maps.Point(0, 0),
        // The anchor for this image is the base of the flagpole at (0, 32).
        anchor: new google.maps.Point(0, 32)
      };
      customers.forEach(function(pool) {
        // debugger
      var pool = pool
      var latLng = {lat: pool.latitude, lng: pool.longitude};
      var image = {
        url: 'http://maps.google.com/mapfiles/ms/icons/'+assign_day_color(pool)+'.png',
        size: new google.maps.Size(40, 32),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(0, 32)
      };
      if(latLng.lat && latLng.lng){
        var marker = new google.maps.Marker({
          position: latLng,
          map: map,
          icon: image,
          // animation: google.maps.Animation.DROP
        });
      }
      //info window
      var contentString = 
        '<div class="info-window">'+
          '<article>'+
            '<h3>'+pool.first_name+' '+pool.last_name+'</h3>'+
            '<address>'+fullAddress(pool)+'</address>' +
            "<div class='flex justify-content link-wrapper'>"+
              "<div class=' col'><a href='http://localhost:3000/customers/"+pool.id+" '>Details</a></div>"+
              "<div class=' col'><a target='_blank' href='"+google_maps_direction_link(pool)+"'>Directions</a></div>"+
            '</div>'+
          '</article>'+
        '</div>';

    var infowindow = new google.maps.InfoWindow({
      content: contentString
    });
    

    marker.addListener('click', function() {
      infowindow.open(map, marker);
    });
    // Push marker to markers array
    markers.push(marker);
      
    });
  }
  function assign_day_color(pool){
    var schedule = create_schudule_days(pool).join(' ');
    var color = '';
    switch (schedule) {
      case 'Monday':
        return color = 'purple';
      case 'Tuesday':
        return color = 'red';
      case 'Wednesday':
        return color = 'yellow';
      case 'Thursday':
        return color = 'orange';
      case 'Friday':
        return color = 'green';
      default:
        return color = 'blue';
    }
  }
  function create_schudule_days(pool){
    var schedule = [];
    if(pool.monday){schedule.push('Monday');} 
    if(pool.tuesday){schedule.push('Tuesday');}
    if(pool.wednesday){schedule.push('Wednesday');}
    if(pool.thursday){schedule.push('Thursday');}
    if(pool.friday){schedule.push('Friday');}
    return schedule

  }
  function fullAddress(pool){
    return pool.street_address+', '+pool.city+' '+pool.state+' '+pool.zip_code
  }
  function google_maps_direction_link(pool){
    address = fullAddress(pool).replace(/\s/g, "+");
    return query = 'https://www.google.com/maps?saddr=My+Location&daddr='+address;
  }
  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
    infoWindow.open(map);
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAno7RUQYwILcIEeUJC4FUxBkc2fR4cRK0&callback=initMap&libraries=places"
async defer></script>